<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{EA568D2A-DE04-4EE7-B141-C6F66AFA0B84}</ProjectGuid>
    <RootNamespace>Kaleid::Input</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.15063.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(Configuration)\Windows\$(PlatformTarget)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(Configuration)\Windows\$(PlatformTarget)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(Configuration)\Windows\$(PlatformTarget)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\</OutDir>
    <IntDir>$(ProjectDir)obj\$(Configuration)\Windows\$(PlatformTarget)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)packages\</AdditionalIncludeDirectories>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.hpp</PrecompiledHeaderFile>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PreprocessorDefinitions>_WINDLL;KALEID_INPUT_DLL;DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <GenerateXMLDocumentationFiles>true</GenerateXMLDocumentationFiles>
    </ClCompile>
    <Link>
      <AdditionalDependencies>Jagerts.Felcp.Helpers.lib;glfw3.lib;glfw3dll.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)packages\GLFW\lib\Windows\$(PlatformTarget)\;$(SolutionDir)packages\Jagerts.Felcp.Helpers\lib\$(Configuration)\Windows\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetFileName)" "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetFileName)" "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetName).lib" "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\" mkdir "$(SolutionDir)dist\$(ProjectName)\"
xcopy "$(ProjectDir)*.hpp" "$(SolutionDir)dist\$(ProjectName)\" /y
if not exist "$(SolutionDir)dist\Kaleid.Shared\" mkdir "$(SolutionDir)dist\Kaleid.Shared\"
xcopy "$(SolutionDir)Kaleid.Shared\*.hpp" "$(SolutionDir)dist\Kaleid.Shared\" /y</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)packages\</AdditionalIncludeDirectories>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.hpp</PrecompiledHeaderFile>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PreprocessorDefinitions>_WINDLL;KALEID_INPUT_DLL;DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <GenerateXMLDocumentationFiles>true</GenerateXMLDocumentationFiles>
    </ClCompile>
    <Link>
      <AdditionalDependencies>Jagerts.Felcp.Helpers.lib;glfw3.lib;glfw3dll.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)packages\GLFW\lib\Windows\$(PlatformTarget)\;$(SolutionDir)packages\Jagerts.Felcp.Helpers\lib\$(Configuration)\Windows\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetFileName)" "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetFileName)" "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetName).lib" "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\" mkdir "$(SolutionDir)dist\$(ProjectName)\"
xcopy "$(ProjectDir)*.hpp" "$(SolutionDir)dist\$(ProjectName)\" /y
if not exist "$(SolutionDir)dist\Kaleid.Shared\" mkdir "$(SolutionDir)dist\Kaleid.Shared\"
xcopy "$(SolutionDir)Kaleid.Shared\*.hpp" "$(SolutionDir)dist\Kaleid.Shared\" /y</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)packages\</AdditionalIncludeDirectories>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.hpp</PrecompiledHeaderFile>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PreprocessorDefinitions>_WINDLL;KALEID_INPUT_DLL;RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <GenerateXMLDocumentationFiles>true</GenerateXMLDocumentationFiles>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>Jagerts.Felcp.Helpers.lib;glfw3.lib;glfw3dll.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)packages\GLFW\lib\Windows\$(PlatformTarget)\;$(SolutionDir)packages\Jagerts.Felcp.Helpers\lib\$(Configuration)\Windows\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetFileName)" "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetFileName)" "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetName).lib" "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\" mkdir "$(SolutionDir)dist\$(ProjectName)\"
xcopy "$(ProjectDir)*.hpp" "$(SolutionDir)dist\$(ProjectName)\" /y
if not exist "$(SolutionDir)dist\Kaleid.Shared\" mkdir "$(SolutionDir)dist\Kaleid.Shared\"
xcopy "$(SolutionDir)Kaleid.Shared\*.hpp" "$(SolutionDir)dist\Kaleid.Shared\" /y</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)packages\</AdditionalIncludeDirectories>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>stdafx.hpp</PrecompiledHeaderFile>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PreprocessorDefinitions>_WINDLL;KALEID_INPUT_DLL;RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <GenerateXMLDocumentationFiles>true</GenerateXMLDocumentationFiles>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>Jagerts.Felcp.Helpers.lib;glfw3.lib;glfw3dll.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)packages\GLFW\lib\Windows\$(PlatformTarget)\;$(SolutionDir)packages\Jagerts.Felcp.Helpers\lib\$(Configuration)\Windows\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PostBuildEvent>
      <Command>if not exist "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetFileName)" "$(SolutionDir)Kaleid.Application\bin\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetFileName)" "$(SolutionDir)dist\$(ProjectName)\bin\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\" mkdir "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\"
copy "$(ProjectDir)bin\$(Configuration)\Windows\$(PlatformTarget)\$(TargetName).lib" "$(SolutionDir)dist\$(ProjectName)\lib\$(Configuration)\Windows\$(PlatformTarget)\" /y
if not exist "$(SolutionDir)dist\$(ProjectName)\" mkdir "$(SolutionDir)dist\$(ProjectName)\"
xcopy "$(ProjectDir)*.hpp" "$(SolutionDir)dist\$(ProjectName)\" /y
if not exist "$(SolutionDir)dist\Kaleid.Shared\" mkdir "$(SolutionDir)dist\Kaleid.Shared\"
xcopy "$(SolutionDir)Kaleid.Shared\*.hpp" "$(SolutionDir)dist\Kaleid.Shared\" /y</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="KeyBinding.cpp" />
    <ClCompile Include="Keyboard.cpp" />
    <ClCompile Include="Mouse.cpp" />
    <ClCompile Include="MouseClickBinding.cpp" />
    <ClCompile Include="MouseMoveBinding.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\Kaleid.Shared\Common.hpp" />
    <ClInclude Include="KeyBinding.hpp" />
    <ClInclude Include="Keyboard.hpp" />
    <ClInclude Include="Mouse.hpp" />
    <ClInclude Include="MouseClickBinding.hpp" />
    <ClInclude Include="MouseMoveBinding.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Kaleid.Graphics\Kaleid.Graphics.vcxproj">
      <Project>{b0d1fc24-7ed7-4f0a-b51b-0864f52f4f77}</Project>
    </ProjectReference>
    <ProjectReference Include="..\Kaleid.Helpers\Kaleid.Helpers.vcxproj">
      <Project>{fa74e84f-8b9c-44fa-99be-b68865635073}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>